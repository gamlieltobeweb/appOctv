{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\apprn\\\\component\\\\marque.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Audio, Video } from 'expo-av';\nimport * as FileSystem from 'expo-file-system';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nexport default function Marque() {\n  var _useState = useState('http://d23dyxeqlo5psv.cloudfront.net/big_buck_bunny.mp4'),\n      _useState2 = _slicedToArray(_useState, 2),\n      videourl = _useState2[0],\n      setvideourl = _useState2[1];\n\n  var _useState3 = useState(\"Download\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      buttontitle = _useState4[0],\n      setbuttontitle = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      progressValue = _useState6[0],\n      setprogressValue = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      totalSize = _useState8[0],\n      settotalSize = _useState8[1];\n\n  function formatBytes(bytes) {\n    var decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n    if (bytes === 0) return '0 Bytes';\n    var k = 1024;\n    var dm = decimals < 0 ? 0 : decimals;\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    var i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  }\n\n  function downloadVideo() {\n    var callback, downloadResumable, _await$downloadResuma, uri;\n\n    return _regeneratorRuntime.async(function downloadVideo$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setbuttontitle(\"Downloading\");\n\n            callback = function callback(downloadProgress) {\n              settotalSize(formatBytes(downloadProgress.totalBytesExpectedToWrite));\n              var progress = downloadProgress.totalBytesWritten / downloadProgress.totalBytesExpectedToWrite;\n              progress = progress.toFixed(2) * 100;\n              setprogressValue(progress.toFixed(0));\n            };\n\n            downloadResumable = FileSystem.createDownloadResumable(videourl, FileSystem.documentDirectory + 'small.mp4', {}, callback);\n            _context.prev = 3;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(downloadResumable.downloadAsync());\n\n          case 6:\n            _await$downloadResuma = _context.sent;\n            uri = _await$downloadResuma.uri;\n            console.log('Finished downloading to ', uri);\n            setbuttontitle(\"Dowloaded\");\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](3);\n            console.error(_context.t0);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[3, 12]], Promise);\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, React.createElement(Video, {\n    source: require(\"../media/animation_lukkas_2018_hebrew.mp4\"),\n    rate: 1,\n    volume: 1,\n    isMuted: false,\n    resizeMode: Video.RESIZE_MODE_CONTAIN,\n    isLooping: true,\n    useNativeControls: true,\n    style: styles.video,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: buttontitle,\n    onPress: downloadVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.textprogress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, \"size:\", totalSize), React.createElement(Text, {\n    style: styles.textprogress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, \"progress:\", progressValue, \" %\"));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  video: {\n    width: width,\n    height: height / 2\n  },\n  textprogress: {\n    justifyContent: 'center',\n    alignContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/apprn/component/marque.js"],"names":["StatusBar","React","useState","Audio","Video","FileSystem","Dimensions","get","width","height","Marque","videourl","setvideourl","buttontitle","setbuttontitle","progressValue","setprogressValue","totalSize","settotalSize","formatBytes","bytes","decimals","k","dm","sizes","i","Math","floor","log","parseFloat","pow","toFixed","downloadVideo","callback","downloadProgress","totalBytesExpectedToWrite","progress","totalBytesWritten","downloadResumable","createDownloadResumable","documentDirectory","downloadAsync","uri","console","error","styles","container","require","RESIZE_MODE_CONTAIN","video","textprogress","StyleSheet","create","flex","justifyContent","alignContent"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { useState } from 'react';\r\nimport { Button, Dimensions, StyleSheet, Text, View } from 'react-native';\r\nimport { Audio, Video } from 'expo-av';\r\nimport * as FileSystem from 'expo-file-system';\r\n// import {DocumentPicker} from 'expo-document-picker';\r\n// import DocumentPicker from 'react-native-document-picker';\r\n\r\n\r\n\r\nconst { width, height } = Dimensions.get('window')\r\n\r\n\r\n\r\nexport default function Marque() {\r\n\r\n  // const [videourl, setvideourl] = useState('https://www.youtube.com/watch?v=pXMJxjsK3Bo&list=PLIB9GjPDOoNb8uI4FKicVwLss2mlCRuQn')\r\n  const [videourl, setvideourl] = useState('http://d23dyxeqlo5psv.cloudfront.net/big_buck_bunny.mp4')\r\n  const [buttontitle, setbuttontitle] = useState(\"Download\")\r\n  const [progressValue, setprogressValue] = useState(0)\r\n  const [totalSize, settotalSize] = useState(0)\r\n\r\n\r\n  function formatBytes(bytes, decimals = 2) {\r\n    if (bytes === 0) return '0 Bytes';\r\n\r\n    const k = 1024;\r\n    const dm = decimals < 0 ? 0 : decimals;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n  }\r\n\r\n\r\n\r\n  async function downloadVideo() {\r\n    setbuttontitle(\"Downloading\")\r\n\r\n    const callback = downloadProgress => {\r\n      settotalSize(formatBytes(downloadProgress.totalBytesExpectedToWrite))\r\n      var progress = downloadProgress.totalBytesWritten / downloadProgress.totalBytesExpectedToWrite;\r\n      progress = progress.toFixed(2) *100\r\n      setprogressValue(progress.toFixed(0))\r\n\r\n\r\n\r\n    };\r\n\r\n\r\n    const downloadResumable = FileSystem.createDownloadResumable(\r\n      videourl,\r\n      FileSystem.documentDirectory + 'small.mp4',\r\n      {},\r\n      callback,\r\n\r\n    );\r\n\r\n    try {\r\n      const { uri } = await downloadResumable.downloadAsync();\r\n      console.log('Finished downloading to ', uri);\r\n      setbuttontitle(\"Dowloaded\")\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n\r\n      <Video\r\n\r\n        source={require('../media/animation_lukkas_2018_hebrew.mp4')}\r\n        // source={{ uri: videourl }}\r\n        rate={1}\r\n        volume={1}\r\n        isMuted={false}\r\n        resizeMode={Video.RESIZE_MODE_CONTAIN}\r\n        // shouldPlay\r\n        isLooping\r\n        useNativeControls\r\n        style={styles.video}\r\n      />\r\n      <Button title={buttontitle} onPress={downloadVideo}></Button>\r\n      <View/>\r\n      <Text style={styles.textprogress} >size:{totalSize}</Text>\r\n      <Text style={styles.textprogress}>progress:{progressValue} %</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n\r\n  },\r\n  video: {\r\n    width: width,\r\n    height: height / 2,\r\n    \r\n  },\r\n  textprogress: {\r\n    justifyContent: 'center',\r\n    alignContent: 'center'\r\n    // marginBottom:30,\r\n    // flex:1,\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}